/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JFrameComponents;
import DBComponents.DBComponents;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kyle
 */
public class SearchLotsPreferNo extends javax.swing.JFrame implements SearchLots,Close {


    /**
     * Creates new form ShowLotsTable
     */
    public SearchLotsPreferNo() {
        initComponents();
    }
    @Override
    public void close(){
        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        showLotsBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        ChosenLotBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Search Lots");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Lot ID", "Lot Size (in sq. meters)", "Lot Block", "Lot Number", "Lot Price", "Lot Status"
            }
        ));
        jTable1.setDoubleBuffered(true);
        jScrollPane1.setViewportView(jTable1);

        showLotsBtn.setText("Show Lots");
        showLotsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showLotsBtnActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Already Chosen a Lot?");

        jLabel6.setText("Enter Lot ID");

        ChosenLotBtn.setText("ENTER");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(ChosenLotBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(ChosenLotBtn)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 885, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(669, 669, 669)
                                .addComponent(showLotsBtn))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabel1)))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(showLotsBtn))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void showLotsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showLotsBtnActionPerformed
        //Singleton Pattern
        try {
            DBComponents db = DBComponents.getInstance();
            db.getCon();
            showTableData(db);

        } catch (SQLException ex) {
            Logger.getLogger(SearchLotsPreferNo.class.getName()).log(Level.SEVERE, null, ex);
        }   
    }//GEN-LAST:event_showLotsBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new SearchLotsPreferNo().setVisible(true);
            }
        });
    }
    
    @Override
    public void ReserveLot(DBComponents db, int lotID) {
    try {
        String res = "Reserved";
        String selectSql = "SELECT * FROM realestate.lottable WHERE LotID = ?";
        String updateSql = "UPDATE realestate.lottable SET LotStatus = ? WHERE LotID = ? AND LotStatus = ?";
        
        // Use try-with-resources to automatically close the PreparedStatement and ResultSet
        try (PreparedStatement selectPst = db.getCon().prepareStatement(selectSql)) {
            selectPst.setInt(1, lotID);
            try (ResultSet rs = selectPst.executeQuery()) {
                if (rs.next()) {
                    String lotStatus = rs.getString("LotStatus");
                    
                    if ("Available".equals(lotStatus)) {
                        // Use another try-with-resources for the update PreparedStatement
                        try (PreparedStatement updatePst = db.getCon().prepareStatement(updateSql)) {
                            updatePst.setString(1, res);
                            updatePst.setInt(2, lotID);
                            updatePst.setString(3, "Available");
                            updatePst.executeUpdate();
                        }
                        JFrame frame = new JFrame();
                        JOptionPane.showMessageDialog(frame, "Successfully Reserved");
                    } else {
                        JFrame frame = new JFrame();
                        JOptionPane.showMessageDialog(frame, "This lot is Already Reserved");
                    }
                } else {
                    JFrame frame = new JFrame();
                    JOptionPane.showMessageDialog(frame, "Lot ID not found");
                }
            }
        }

        resetTable();
        showTableData(db);
    } catch (SQLException ex) {
        Logger.getLogger(SearchLotsPreferYes.class.getName()).log(Level.SEVERE, null, ex);
    }

}
    @Override
    public void resetTable(){
        DefaultTableModel tb1Model = (DefaultTableModel)jTable1.getModel();
        tb1Model.setRowCount(0);
    }
    @Override
    public void showTableData(DBComponents db) {
        try {
            String sql = "SELECT * FROM realestate.lottable;";
            db.setPst(db.getCon().prepareStatement(sql));
            db.setRs(db.getPst().executeQuery());

            resetTable();

            while (db.getRs().next()) {
                String LotID = String.valueOf(db.getRs().getInt("lotid"));//int
                String LotSize = String.valueOf(db.getRs().getInt("LotSize"));//int
                String LotBlock = String.valueOf(db.getRs().getInt("LotBlock"));//int
                String LotNum = String.valueOf(db.getRs().getInt("LotNum"));//int

                String LotPrice = String.valueOf(db.getRs().getInt("LotPrice"));//int
                String LotStatus = db.getRs().getString("LotStatus");

                String tbData[] = {LotID, LotSize, LotBlock, LotNum, LotPrice, LotStatus};
                DefaultTableModel tb1Model = (DefaultTableModel) jTable1.getModel();

                tb1Model.addRow(tbData);
            }
            db.getCon().close();

        } catch (SQLException ex) {
            Logger.getLogger(SearchLotsPreferNo.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
        
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ChosenLotBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton showLotsBtn;
    // End of variables declaration//GEN-END:variables
}

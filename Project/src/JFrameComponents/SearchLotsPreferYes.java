package JFrameComponents;

import DBComponents.DBComponents;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Kyle
 */
public class SearchLotsPreferYes extends javax.swing.JFrame implements SearchLots, Close {

    /**
     * Creates new form SearchLots
     */
    public SearchLotsPreferYes() {
        initComponents();
    }
    
    @Override
    public void close(){
        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        MenuBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldLotBlock = new javax.swing.JTextField();
        jComboBoxLotSize = new javax.swing.JComboBox<>();
        jTextFieldLotSize = new javax.swing.JTextField();
        jComboBoxPrice = new javax.swing.JComboBox<>();
        jTextFieldPrice = new javax.swing.JTextField();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldReserveLotID = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        ChosenLotBtn = new javax.swing.JButton();
        SearchBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Search Lots");

        MenuBtn.setText("Back to Menu");
        MenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuBtnActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Lot ID", "Lot Size (in sq. meters)", "Lot Block", "Lot Number", "Lot Price", "Lot Status"
            }
        ));
        jTable1.setDoubleBuffered(true);
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setText("Lot Size (50 - 255)");

        jLabel3.setText("Lot Block Number (1 - 5)");

        jLabel4.setText("Price (100,000 - 4,500,000)");

        jTextFieldLotBlock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldLotBlockActionPerformed(evt);
            }
        });

        jComboBoxLotSize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ">=", "<=" }));

        jComboBoxPrice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ">=", "<=" }));
        jComboBoxPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPriceActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Already Chosen a Lot?");

        jLabel6.setText("Enter Lot ID");

        ChosenLotBtn.setText("ENTER");
        ChosenLotBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChosenLotBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldReserveLotID, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(ChosenLotBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldReserveLotID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(ChosenLotBtn)
                .addContainerGap())
        );

        SearchBtn.setText("Search");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jComboBoxLotSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldLotSize, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldLotBlock))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jComboBoxPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(37, 37, 37)
                                        .addComponent(SearchBtn)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(MenuBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(12, 12, 12))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(MenuBtn)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBoxLotSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldLotSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldLotBlock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBoxPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SearchBtn))))
                        .addGap(31, 31, 31))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuBtnActionPerformed
        close();
        MainMenu mainMenu = new MainMenu();
        mainMenu.setVisible(true);
    }//GEN-LAST:event_MenuBtnActionPerformed

    private void jTextFieldLotBlockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldLotBlockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldLotBlockActionPerformed

    private void jComboBoxPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxPriceActionPerformed

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        try {
            DBComponents db = DBComponents.getInstance();
            db.getCon();
            searchTableData(db, Integer.parseInt(jTextFieldLotSize.getText()),Integer.parseInt(jTextFieldLotBlock.getText()),Integer.parseInt(jTextFieldPrice.getText()));
        } catch (SQLException ex) {
            Logger.getLogger(SearchLotsPreferYes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SearchBtnActionPerformed

    private void ChosenLotBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChosenLotBtnActionPerformed
        try {
            DBComponents db = DBComponents.getInstance();
            db.getCon();
            ReserveLot(db, Integer.parseInt(jTextFieldReserveLotID.getText()));
        } catch (SQLException ex) {
            Logger.getLogger(SearchLotsPreferYes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ChosenLotBtnActionPerformed

    @Override
    public void resetTable(){
        DefaultTableModel tb1Model = (DefaultTableModel)jTable1.getModel();
        tb1Model.setRowCount(0);
    }
    @Override
    public void ReserveLot(DBComponents db, int lotID) {
    try {
        String res = "Reserved";
        String selectSql = "SELECT * FROM realestate.lottable WHERE LotID = ?";
        String updateSql = "UPDATE realestate.lottable SET LotStatus = ? WHERE LotID = ? AND LotStatus = ?";
        
        // Use try-with-resources to automatically close the PreparedStatement and ResultSet
        try (PreparedStatement selectPst = db.getCon().prepareStatement(selectSql)) {
            selectPst.setInt(1, lotID);
            try (ResultSet rs = selectPst.executeQuery()) {
                if (rs.next()) {
                    String lotStatus = rs.getString("LotStatus");
                    
                    if ("Available".equals(lotStatus)) {
                        // Use another try-with-resources for the update PreparedStatement
                        try (PreparedStatement updatePst = db.getCon().prepareStatement(updateSql)) {
                            updatePst.setString(1, res);
                            updatePst.setInt(2, lotID);
                            updatePst.setString(3, "Available");
                            updatePst.executeUpdate();
                        }
                        JFrame frame = new JFrame();
                        JOptionPane.showMessageDialog(frame, "Successfully Reserved");
                    } else {
                        JFrame frame = new JFrame();
                        JOptionPane.showMessageDialog(frame, "This lot is Already Reserved");
                    }
                } else {
                    JFrame frame = new JFrame();
                    JOptionPane.showMessageDialog(frame, "Lot ID not found");
                }
            }
        }

        resetTable();
        showTableData(db);
    } catch (SQLException ex) {
        Logger.getLogger(SearchLotsPreferYes.class.getName()).log(Level.SEVERE, null, ex);
    }

}
    public void searchTableData(DBComponents db, int size, int block, int price) {

        try {
            String LotSizeComp, LotPriceComp;
            if (jComboBoxLotSize.getSelectedIndex() == 0) {
                LotSizeComp = ">=";
            } else {
                LotSizeComp = "<=";
            }

            if (jComboBoxPrice.getSelectedIndex() == 0) {
                LotPriceComp = ">=";
            } else {
                LotPriceComp = "<=";
            }

            String sql = "SELECT * FROM realestate.lottable WHERE LotSize " + LotSizeComp + " ? AND LotBlock = ? AND LotPrice " + LotPriceComp + " ?;";
            db.setPst(db.getCon().prepareStatement(sql));
            db.getPst().setInt(1, size);
            db.getPst().setInt(2, block);
            db.getPst().setInt(3, price);

            db.setRs(db.getPst().executeQuery());

            resetTable();

            while (db.getRs().next()) {
                String LotID = String.valueOf(db.getRs().getInt("lotid"));//int
                String LotSize = String.valueOf(db.getRs().getInt("LotSize"));//int
                String LotBlock = String.valueOf(db.getRs().getInt("LotBlock"));//int
                String LotNum = String.valueOf(db.getRs().getInt("LotNum"));//int

                String LotPrice = String.valueOf(db.getRs().getInt("LotPrice"));//int
                String LotStatus = db.getRs().getString("LotStatus");

                String tbData[] = {LotID, LotSize, LotBlock, LotNum, LotPrice, LotStatus};
                DefaultTableModel tb1Model = (DefaultTableModel) jTable1.getModel();

                tb1Model.addRow(tbData);
            }

        } catch (SQLException ex) {
            Logger.getLogger(SearchLotsPreferYes.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    @Override
    public void showTableData(DBComponents db) {

        try {
            db.setCon(DriverManager.getConnection("jdbc:mysql://localhost:3306/mysql?zeroDateTimeBehavior=convertToNull", "root", ""));
            String sql = "SELECT * FROM realestate.lottable;";
            db.setPst(db.getCon().prepareStatement(sql));
            db.setRs(db.getPst().executeQuery());

            resetTable();

            while (db.getRs().next()) {
                String LotID = String.valueOf(db.getRs().getInt("lotid"));//int
                String LotSize = String.valueOf(db.getRs().getInt("LotSize"));//int
                String LotBlock = String.valueOf(db.getRs().getInt("LotBlock"));//int
                String LotNum = String.valueOf(db.getRs().getInt("LotNum"));//int

                String LotPrice = String.valueOf(db.getRs().getInt("LotPrice"));//int
                String LotStatus = db.getRs().getString("LotStatus");

                String tbData[] = {LotID, LotSize, LotBlock, LotNum, LotPrice, LotStatus};
                DefaultTableModel tb1Model = (DefaultTableModel) jTable1.getModel();

                tb1Model.addRow(tbData);
            }
            db.getCon().close();

        } catch (SQLException ex) {
            Logger.getLogger(SearchLotsPreferYes.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchLotsPreferYes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchLotsPreferYes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchLotsPreferYes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchLotsPreferYes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchLotsPreferYes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ChosenLotBtn;
    private javax.swing.JButton MenuBtn;
    private javax.swing.JButton SearchBtn;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JComboBox<String> jComboBoxLotSize;
    private javax.swing.JComboBox<String> jComboBoxPrice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldLotBlock;
    private javax.swing.JTextField jTextFieldLotSize;
    private javax.swing.JTextField jTextFieldPrice;
    private javax.swing.JTextField jTextFieldReserveLotID;
    // End of variables declaration//GEN-END:variables
}
